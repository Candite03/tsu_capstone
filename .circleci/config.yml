# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1
jobs:
  build:
    docker:
    # Use the same Docker base as the project
      - image: python:3.7.3-stretch

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # run lint!
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint

  build-docker:
    docker:
      - image: circleci/node
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.12
      - run:
          name: Build docker image
          command: |
            docker build --tag=$DOCKER_IMAGE_NAME .
            docker image ls
      - run: 
          name: Push docker image to DockerHub
          command: |
            docker login -u="$DOCKERHUB_USERNAME" -p="$DOCKERHUB_PASSWORD"
            docker tag $DOCKER_IMAGE_NAME $DOCKER_IMAGE_NAME:capstone
            docker push $DOCKER_IMAGE_NAME:capstone
  
  create_vpc:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create K8s VPC
          command: |
             chmod +x ./cloudformation/scripts/create.sh
             ./cloudformation/scripts/create.sh Capstone-EKS-VPC ./cloudformation/k8s_vpc.yml ./cloudformation/vpc-parameters.json
             sleep 300
             echo "VPC is now ready."

  create_cluster:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create K8s Cluster
          command: |
             chmod +x ./cloudformation/scripts/create.sh
             ./cloudformation/scripts/create.sh Capstone-EKS-Cluster ./cloudformation/k8s_infra.yml ./cloudformation/infra-parameters.json

  deploy_app:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Check Cluster Availability
          command: |
             chmod +x ./cluster_availability.sh
             ./cluster_availability.sh
          no_output_timeout: 30m

workflows:
  eks-cluster-deploy:
    jobs:
        - build
        - build-docker:
            requires: [build]
        - create_vpc
        - create_cluster:
            requires: [create_vpc]
        - deploy_app:
            requires: [create_cluster]