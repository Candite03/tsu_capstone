Description: >
    Tsundzukani Mokgalaka.
    This creates an EKS cluster on the created VPC.

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

Resources:
    EKSClusterRole:
        Type: AWS::IAM::Role
        Properties:
          RoleName: EKSClusterRole
          AssumeRolePolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Principal:
                  Service:
                    - eks.amazonaws.com
                Action:
                  - sts:AssumeRole
          ManagedPolicyArns:
            - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
            - arn:aws:iam::aws:policy/AmazonEKSServicePolicy
            - arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess

    EKSNodeGroupRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: EKSNodeGroupRole
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - ec2.amazonaws.com
              Action:
                - sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
          - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
          - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly

    EKSClusterSecGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Allow http to our hosts
        VpcId:
          Fn::ImportValue: !Sub "${EnvironmentName}-VPCID"
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 30080
          CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0

    EKSCluster:
      Type: AWS::EKS::Cluster
      Properties:
        Name: Capstone_Cluster
        RoleArn: !GetAtt EKSClusterRole.Arn
        ResourcesVpcConfig:
          SecurityGroupIds:
            - Ref: EKSClusterSecGroup
          SubnetIds:
            - Fn::ImportValue: !Sub ${EnvironmentName}-PUB1-SN
            - Fn::ImportValue: !Sub ${EnvironmentName}-PUB2-SN
          EndpointPublicAccess: true
          EndpointPrivateAccess: false
          PublicAccessCidrs: [ "0.0.0.0/0" ]
        Logging:
          ClusterLogging:
            EnabledTypes:
              - Type: api
              - Type: audit
        Tags:
          - Key: "Name"
            Value: "tsu_EKSCluster"

    EKSNodeGroup:
      Type: AWS::EKS::Nodegroup
      Properties:
        ClusterName: !Ref EKSCluster
        NodegroupName: Capstone_NodeGroup
        NodeRole: !GetAtt EKSNodeGroupRole.Arn
        Subnets:
          - Fn::ImportValue: !Sub ${EnvironmentName}-PUB1-SN
          - Fn::ImportValue: !Sub ${EnvironmentName}-PUB2-SN
        ScalingConfig:
          DesiredSize: 2
          MinSize: 2
          MaxSize: 5
        Tags:
          "Name": "tsu_EKSNodeGroup"